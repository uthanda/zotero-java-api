openapi: 3.0.0
info:
  title: web
  version: '1.0'
servers:
  - url: 'https://api.zotero.org'
paths:
  '/users/{userId}/collections':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
        description: User Id
    get:
      summary: Your GET endpoint
      tags:
        - Collections
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/item'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
      operationId: get-users-userId-categories
      parameters: []
  '/users/{userId}/items/{itemId}':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
      - schema:
          type: string
        name: itemId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/item'
      operationId: get-users-userId-item-itemId
      parameters:
        - schema:
            type: integer
            enum:
              - 3
          in: query
          name: v
    post:
      summary: ''
      operationId: post-users-userId-items-itemId
      responses:
        '200':
          description: OK
    patch:
      summary: ''
      operationId: patch-users-userId-items-itemId
      responses:
        '200':
          description: OK
    delete:
      summary: ''
      operationId: delete-users-userId-items-itemId
      responses:
        '200':
          description: OK
  '/users/{userId}/collections/top':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - Collections
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/item'
      operationId: get-users-userId-collections-top
  '/users/{userId}/collections/{collectionKey}':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
      - schema:
          type: string
        name: collectionKey
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - Collections
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/item'
      operationId: get-users-userId-collections-collectionKey
  '/users/{userId}/collections/{collectionKey}/collections':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
      - schema:
          type: string
        name: collectionKey
        in: path
        required: true
    get:
      summary: Your GET endpoint
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/item'
      operationId: get-users-userId-collections-collectionKey-collections
      tags:
        - Collections
  '/users/{userId}/items':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
            Last-Modified-Version:
              schema:
                type: number
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/item'
      operationId: users-get-items
      parameters:
        - schema:
            type: string
            uniqueItems: true
          in: query
          name: itemKey
          description: A comma separated list of items to return
        - schema:
            type: array
            items:
              $ref: '#/components/schemas/itemType'
          in: query
          name: itemType
        - schema:
            type: string
            enum:
              - asc
              - dsc
          in: query
          name: direction
          description: Sort direction
        - schema:
            type: integer
            maximum: 100
            minimum: 1
          in: query
          name: limit
          description: Maximum number of items to return
        - schema:
            type: integer
          in: query
          name: start
          description: Result set start index
        - schema:
            type: number
          in: header
          name: If-Modified-Since-Version
          description: Latest version number of the items locally.  Only items newer will be returned.
        - schema:
            type: integer
          in: query
          name: v
          description: API Version Number
      description: ''
    delete:
      summary: ''
      operationId: delete-users-userId-items
      responses:
        '200':
          description: OK
components:
  schemas:
    link:
      description: Link to an item
      type: object
      x-examples:
        example-1:
          href: string
          type: string
      properties:
        href:
          type: string
          minLength: 1
        type:
          $ref: '#/components/schemas/linkmode'
      required:
        - href
        - type
    library:
      description: Library information
      type: object
      x-examples: {}
      properties:
        type:
          type: string
          minLength: 1
          enum:
            - user
        id:
          type: number
        name:
          type: string
          minLength: 1
        links:
          $ref: '#/components/schemas/links'
      required:
        - type
        - id
        - name
        - links
    meta:
      description: ''
      type: object
      properties:
        creatorSummary:
          type: string
          minLength: 1
        parsedDate:
          type: string
          minLength: 1
        numChildren:
          type: number
      required:
        - creatorSummary
        - parsedDate
        - numChildren
    creator:
      description: ''
      type: object
      properties:
        creatorType:
          $ref: '#/components/schemas/creatorType'
        firstName:
          type: string
          minLength: 1
        lastName:
          type: string
          minLength: 1
      required:
        - creatorType
        - firstName
        - lastName
    tag:
      description: ''
      type: object
      properties:
        tag:
          type: string
          minLength: 1
        type:
          type: number
      required:
        - tag
        - type
    data:
      description: Data about a single item in the collection
      type: object
      x-examples:
        example-1:
          key: string
          version: 0
          itemType: string
          title: string
          creators:
            - creatorType: author
              firstName: string
              lastName: string
          abstractNote: string
          series: string
          seriesNumber: string
          volume: string
          numberOfVolumes: string
          edition: string
          place: string
          publisher: string
          date: string
          numPages: string
          language: string
          ISBN: string
          shortTitle: string
          url: string
          accessDate: string
          archive: string
          archiveLocation: string
          libraryCatalog: string
          callNumber: string
          rights: string
          extra: string
          tags:
            - tag: string
              type: 0
          collections:
            - {}
          relations:
            'owl:sameAs': string
          dateAdded: '2019-08-24T14:15:22Z'
          dateModified: '2019-08-24T14:15:22Z'
      properties:
        key:
          type: string
          minLength: 1
        version:
          type: number
        itemType:
          $ref: '#/components/schemas/itemType'
        title:
          type: string
          minLength: 1
        creators:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            $ref: '#/components/schemas/creator'
        abstractNote:
          type: string
        series:
          type: string
          minLength: 1
        seriesNumber:
          type: string
          minLength: 1
        volume:
          type: string
        numberOfVolumes:
          type: string
        edition:
          type: string
        place:
          type: string
          minLength: 1
        publisher:
          type: string
          minLength: 1
        date:
          type: string
          minLength: 1
        numPages:
          type: string
          minLength: 1
        language:
          type: string
        ISBN:
          type: string
          minLength: 1
        shortTitle:
          type: string
          minLength: 1
        url:
          type: string
        accessDate:
          type: string
        archive:
          type: string
        archiveLocation:
          type: string
        libraryCatalog:
          type: string
          minLength: 1
        callNumber:
          type: string
          minLength: 1
        rights:
          type: string
        extra:
          type: string
        tags:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            $ref: '#/components/schemas/tag'
        collections:
          type: array
          items:
            type: string
        relations:
          anyOf:
            - properties: {}
              anyOf: []
        dateAdded:
          type: string
          minLength: 1
          format: date-time
        dateModified:
          type: string
          minLength: 1
          format: date-time
        DOI:
          type: string
        parentsCollection:
          type: string
      required:
        - key
        - version
        - itemType
        - title
        - creators
        - abstractNote
        - series
        - seriesNumber
        - volume
        - numberOfVolumes
        - edition
        - place
        - publisher
        - date
        - numPages
        - language
        - ISBN
        - shortTitle
        - url
        - accessDate
        - archive
        - archiveLocation
        - libraryCatalog
        - callNumber
        - rights
        - extra
        - tags
        - collections
        - relations
        - dateAdded
        - dateModified
    relation:
      title: relation
      type: object
      properties:
        id:
          type: string
    item:
      title: item
      type: object
      x-examples:
        example-1:
          key: string
          version: 0
          library:
            type: string
            id: 0
            name: string
            links:
              self:
                href: string
                type: string
              alternate:
                href: string
                type: string
          links:
            self:
              href: string
              type: string
            alternate:
              href: string
              type: string
          data:
            key: string
            version: 0
            itemType: string
            title: string
            creators:
              - creatorType: author
                firstName: string
                lastName: string
            abstractNote: string
            series: string
            seriesNumber: string
            volume: string
            numberOfVolumes: string
            edition: string
            place: string
            publisher: string
            date: string
            numPages: string
            language: string
            ISBN: string
            shortTitle: string
            url: string
            accessDate: string
            archive: string
            archiveLocation: string
            libraryCatalog: string
            callNumber: string
            rights: string
            extra: string
            tags:
              - tag: string
                type: 0
            collections:
              - string
            relations:
              'owl:sameAs': string
            dateAdded: '2019-08-24T14:15:22Z'
            dateModified: '2019-08-24T14:15:22Z'
          meta:
            creatorSummary: string
            parsedDate: string
            numChildren: 0
      description: Information about a single item in the collection
      properties:
        key:
          type: string
        version:
          type: integer
        library:
          $ref: '#/components/schemas/library'
        links:
          $ref: '#/components/schemas/links'
        data:
          $ref: '#/components/schemas/data'
        meta:
          $ref: '#/components/schemas/meta'
    links:
      description: Collection of links
      type: object
      properties:
        self:
          $ref: '#/components/schemas/link'
        alternate:
          $ref: '#/components/schemas/link'
        up:
          $ref: '#/components/schemas/link'
    creatorType:
      title: creatorType
      type: object
      properties:
        id:
          type: string
          enum:
            - artist
            - attorneyAgent
            - author
            - bookAuthor
            - cartographer
            - castMember
            - commenter
            - composer
            - contributor
            - cosponsor
            - counsel
            - director
            - editor
            - guest
            - interviewee
            - interviewer
            - inventor
            - performer
            - podcaster
            - presenter
            - producer
            - programmer
            - recipient
            - reviewedAuthor
            - scriptwriter
            - seriesEditor
            - sponsor
            - translator
            - wordsBy
    itemType:
      title: itemType
      type: object
      properties:
        id:
          type: string
          enum:
            - artwork
            - attachment
            - audioRecording
            - bill
            - blogPost
            - book
            - bookSection
            - case
            - computerProgram
            - conferencePaper
            - dictionaryEntry
            - document
            - email
            - encyclopediaArticle
            - film
            - forumPost
            - hearing
            - instantMessage
            - interview
            - journalArticle
            - letter
            - magazineArticle
            - manuscript
            - map
            - newspaperArticle
            - note
            - patent
            - podcast
            - presentation
            - radioBroadcast
            - report
            - statute
            - thesis
            - tvBroadcast
            - videoRecording
            - webpage
    linkType:
      title: linkType
      type: object
      properties:
        id:
          type: string
          enum:
            - self
            - alternate
            - enclosure
            - attachment
            - up
    linkMode:
      title: linkMode
      type: object
      properties:
        id:
          type: string
          enum:
            - imported_file
            - imported_url
            - linked_file
            - linked_url
    formatTypes:
      title: formatTypes
      type: object
      properties:
        id:
          type: string
          enum:
            - bibtex
            - biblatex
            - bookmarks
            - coins
            - csljson
            - mods
            - refer
            - rdf_bibliontology
            - rdf_dc
            - rdf_zotero
            - ris
            - tei
            - wikipedia
  securitySchemes:
    Zotero-API-Key:
      name: API Key
      type: apiKey
      in: query
tags:
  - name: Collections
